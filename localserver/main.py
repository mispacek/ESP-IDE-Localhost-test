import osimport timeimport networkfrom machine import I2C, Pinfrom micropython import alloc_emergency_exception_bufalloc_emergency_exception_buf(128)# Inicializace I2C OLED a Framebufferuimport framebufdisplay_connected = Falseheight = 64width = 128pages = height // 8buffer = bytearray(pages * width)fbuf = framebuf.FrameBuffer(buffer, width, height, framebuf.MONO_VLSB)L_v_joyX = 0L_v_joyY = 0L_v_press = 0R_v_joyX = 0R_v_joyY = 0R_v_press = 0# Nastaveni Pinu I2C sbernice ze souborutry:    gc.collect()    exec(open("oled.cfg").read())    print("OLED SDA:" + str(OLED_SDA))    print("OLED SCL:" + str(OLED_SCL))        i2c = I2C(0, scl=Pin(OLED_SCL), sda=Pin(OLED_SDA), freq=400000)    devices = i2c.scan()    # Prohledání I2C sbernice aby se vedelo jestli je OLED pripojen    if len(devices) == 0:        print("Display nenalezen !")        print("Pripojte OLED display na piny")        print("    SCL = " + str(OLED_SCL) + " a SDA = " + str(OLED_SDA))    else:        for device in devices:            if device == 60:                print("Display pripojen")                display_connected = Trueexcept:    OLED_SDA = 21    OLED_SCL = 22    print("Konfiguracni soubor pro OLED nebyl nalezen !")    print("Nakonfigurujte piny pro pripojeni OLED displaye")gc.collect()# Zapinani WIFIfbuf.fill(0)fbuf.text(str("Zapinani WIFI"), 12, 28, 1)if display_connected == True:    import ssd1306_mod    display = ssd1306_mod.SSD1306_I2C(128, 64, i2c, buffer)    display.show()import wifimgrwlan = wifimgr.get_connection()gc.collect()# Vypis aktualniho nastaveni WIFI na OLEDsta = network.WLAN(network.STA_IF)ap = network.WLAN(network.AP_IF)WIFI_SSID = "Nepripojeno"WIFI_IP = "0.0.0.0"if sta.active():    WIFI_SSID = sta.config("essid")    WIFI_IP = sta.ifconfig()[0]if ap.active():    WIFI_SSID = ap.config("essid")    WIFI_IP = ap.ifconfig()[0]fbuf.fill(0)fbuf.text("Nastaveni WIFI", 11, 0, 1)fbuf.text("SSID:" + WIFI_SSID, 0, 22, 1)if len(WIFI_IP) > 13:    fbuf.text(WIFI_IP, 0, 34, 1)else:    fbuf.text("IP:" + WIFI_IP, 0, 34, 1)if display_connected == True:    display.show()def stop_code():    try:        on_exit()    except:        #print('Funkce pro ukonceni programu nebyla definovana')        time.sleep_ms(0)def run_code():    try:        gc.collect()        exec(open("idecode").read())    except KeyboardInterrupt:        print('Zastaveni programu')        gc.collect()        stop_code()def list_files(path="/"):    files = [        "{0}/".format(name)        if os.stat(path + "/" + name)[0] & 0o170000 == 0o040000        else name        for name in os.listdir(path)    ]    files.sort()    content = ";".join(files)    print("*FL*" + content + "#FL#")def list_wifi():    print("*wifi*" + str(wifimgr.read_profiles()) + "#wifi#")gc.collect()# Start WWW serveruexec(open("/lib/web_server.py").read())gc.collect()# Start FTP serveruimport uftpdgc.collect()print("Inicializace desky dokoncena")fbuf.text("Inicializace OK", 5, 56, 1)if display_connected == True:    display.show()# Autostart programutry:    start_data = open("idecode").read(16)    if "#autostart*" in start_data:        print("Autostart programu za 3s")        time.sleep(1)                fbuf.fill(0)        fbuf.text("Startuji program", 0, 30, 1)                if display_connected == True:            display.show()                    time.sleep(2)        print("Startuji...")        run_code()except:    time.sleep_ms(0)